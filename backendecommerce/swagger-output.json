{
  "openapi": "3.0.0",
  "info": {
    "title": "Ecommerce API",
    "version": "1.0.0",
    "description": "Documentación de la API de Ecommerce Villaizan"
  },
  "servers": [
    {
      "url": "http://localhost:9000"
    }
  ],
  "components": {
    "schemas": {
      "EntidadBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sub_01H8B4RD715N9ZYPE95KR76839",
            "readOnly": true
          },
          "creadoEn": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T12:00:00Z",
            "readOnly": true
          },
          "actualizadoEn": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T12:00:00Z",
            "readOnly": true
          },
          "desactivadoEn": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null,
            "readOnly": true
          },
          "usuarioCreacion": {
            "type": "string",
            "example": "admin_user",
            "readOnly": true
          },
          "usuarioActualizacion": {
            "type": "string",
            "nullable": true,
            "example": null,
            "readOnly": true
          },
          "estaActivo": {
            "type": "boolean",
            "example": true,
            "readOnly": true
          }
        }
      },
      "Subcategoria": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Subcategoria Ejemplo"
              },
              "tipoProducto": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "tipo_01H8B4RD715N9ZYPE95KR76839"
                    }
                  }
                }
              },
              "productos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "prod_01H8B4RD715N9ZYPE95KR76839"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TipoProducto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "TipoProducto Ejemplo"
              },
              "subcategorias": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "sub_01H8B4RD715N9ZYPE95KR76839"
                    }
                  }
                }
              },
              "productos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "prod_01H8B4RD715N9ZYPE95KR76839"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Producto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "tipoProducto": {
                "$ref": "#/components/schemas/TipoProducto",
                "nullable": true
              },
              "subcategorias": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Subcategoria"
                },
                "nullable": true
              },
              "frutas": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Fruta"
                },
                "nullable": true
              },
              "codigo": {
                "type": "string",
                "example": "PROD12345",
                "nullable": true
              },
              "nombre": {
                "type": "string",
                "example": "Producto Ejemplo"
              },
              "precioA": {
                "type": "number",
                "format": "decimal",
                "example": 100,
                "nullable": true
              },
              "precioB": {
                "type": "number",
                "format": "decimal",
                "example": 90,
                "nullable": true
              },
              "precioC": {
                "type": "number",
                "format": "decimal",
                "example": 80,
                "nullable": true
              },
              "precioEcommerce": {
                "type": "number",
                "format": "decimal",
                "example": 85,
                "nullable": true
              }
            }
          }
        ]
      },
      "Fruta": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "productos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Producto"
                },
                "nullable": true
              },
              "contenidosEducativos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContenidoEducativo"
                },
                "nullable": true
              },
              "nombre": {
                "type": "string",
                "example": "Fruta Ejemplo"
              },
              "urlImagen": {
                "type": "string",
                "example": "http://example.com/imagen.jpg"
              },
              "descripcion": {
                "type": "string",
                "nullable": true,
                "example": "Descripción de la fruta"
              },
              "informacionEducativa": {
                "type": "string",
                "nullable": true,
                "example": "Información nutricional de la fruta"
              }
            }
          }
        ]
      },
      "ContenidoEducativo": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "fruta": {
                "$ref": "#/components/schemas/Fruta",
                "nullable": true
              },
              "titulo": {
                "type": "string",
                "example": "Contenido Educativo Ejemplo"
              },
              "descripcion": {
                "type": "string",
                "nullable": true,
                "example": "Descripción del contenido educativo"
              },
              "tipoContenido": {
                "type": "string",
                "example": "Video"
              },
              "URLContenido": {
                "type": "string",
                "example": "http://example.com/contenido.mp4"
              },
              "fechaPublicacion": {
                "type": "string",
                "format": "date-time",
                "example": "2023-10-01T12:00:00Z"
              }
            }
          }
        ]
      },
      "Almacen": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Almacén Ejemplo"
              }
            }
          }
        ]
      },
      "InventarioAlmacen": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "stock": {
                "type": "integer",
                "example": 100
              },
              "producto": {
                "$ref": "#/components/schemas/Producto",
                "nullable": true
              },
              "almacen": {
                "$ref": "#/components/schemas/Almacen",
                "nullable": true
              }
            }
          }
        ]
      },
      "Ubicacion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "latitud": {
                "type": "number",
                "format": "decimal",
                "example": 40.712776
              },
              "longitud": {
                "type": "number",
                "format": "decimal",
                "example": -74.005974
              },
              "direcciones": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Direccion"
                }
              }
            }
          }
        ]
      },
      "Ciudad": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Moyobamba"
              },
              "region": {
                "type": "string",
                "example": "San Martín"
              },
              "direcciones": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Direccion"
                }
              }
            }
          }
        ]
      },
      "Motorizado": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "placa": {
                "type": "string",
                "example": "ABC-1234"
              },
              "urlImagen": {
                "type": "string",
                "example": "http://example.com/imagen.jpg"
              },
              "almacen": {
                "$ref": "#/components/schemas/Almacen"
              },
              "inventarios": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              },
              "pedidos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        ]
      },
      "Direccion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "calle": {
                "type": "string",
                "example": "Calle Ejemplo"
              },
              "numeroExterior": {
                "type": "string",
                "example": "123"
              },
              "numeroInterior": {
                "type": "string",
                "nullable": true,
                "example": "A"
              },
              "distrito": {
                "type": "string",
                "example": "distrito Ejemplo"
              },
              "codigoPostal": {
                "type": "string",
                "example": "12345"
              },
              "referencia": {
                "type": "string",
                "nullable": true,
                "example": "Cerca del parque"
              },
              "ciudad": {
                "$ref": "#/components/schemas/Ciudad"
              },
              "ubicacion": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            }
          }
        ]
      },
      "InventarioMotorizado": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "stock": {
                "type": "integer",
                "example": 100
              },
              "stockMinimo": {
                "type": "integer",
                "example": 10
              },
              "esMerma": {
                "type": "boolean",
                "example": false
              },
              "motivoMerma": {
                "type": "string",
                "nullable": true,
                "example": "Producto dañado"
              },
              "urlImagenMerma": {
                "type": "string",
                "nullable": true,
                "example": "http://example.com/imagen-merma.jpg"
              },
              "motorizado": {
                "$ref": "#/components/schemas/Motorizado"
              },
              "producto": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        ]
      },
      "Banco": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Banco Ejemplo"
              }
            }
          }
        ]
      },
      "DetallePedido": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "cantidad": {
                "type": "integer",
                "example": 5
              },
              "subtotal": {
                "type": "number",
                "format": "decimal",
                "example": 150
              },
              "producto": {
                "$ref": "#/components/schemas/Producto"
              },
              "pedido": {
                "$ref": "#/components/schemas/Pedido"
              }
            }
          }
        ]
      },
      "Igv": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "porcentaje": {
                "type": "number",
                "format": "decimal",
                "example": 18
              }
            }
          }
        ]
      },
      "LibroReclamaciones": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "fechaIncidente": {
                "type": "string",
                "format": "date-time",
                "example": "2023-10-01T12:00:00Z"
              },
              "nombres": {
                "type": "string",
                "example": "Juan"
              },
              "apellidos": {
                "type": "string",
                "example": "Pérez"
              },
              "correo": {
                "type": "string",
                "example": "juan.perez@example.com"
              },
              "telefono": {
                "type": "string",
                "example": "123456789",
                "nullable": true
              },
              "tipoDoc": {
                "type": "string",
                "example": "DNI"
              },
              "nrDocumento": {
                "type": "string",
                "example": "12345678"
              },
              "menor": {
                "type": "boolean",
                "example": false
              },
              "departamento": {
                "type": "string",
                "example": "Lima"
              },
              "provincia": {
                "type": "string",
                "example": "Lima"
              },
              "distrito": {
                "type": "string",
                "example": "Miraflores"
              },
              "direccion": {
                "type": "string",
                "example": "Av. Ejemplo 123"
              },
              "tipo": {
                "type": "string",
                "example": "Reclamo"
              },
              "montoReclamado": {
                "type": "number",
                "format": "decimal",
                "example": 150
              },
              "descripcion": {
                "type": "string",
                "example": "Descripción del reclamo"
              },
              "reclamacion": {
                "type": "string",
                "example": "Reclamo"
              },
              "nrPedido": {
                "type": "string",
                "example": "PED12345",
                "nullable": true
              },
              "fechaPedido": {
                "type": "string",
                "format": "date-time",
                "example": "2023-10-01T12:00:00Z",
                "nullable": true
              },
              "detalle": {
                "type": "string",
                "example": "Detalle del reclamo",
                "nullable": true
              },
              "pedidoConcreto": {
                "type": "string",
                "example": "Pedido concreto del reclamo",
                "nullable": true
              },
              "urlComprobante": {
                "type": "string",
                "example": "http://example.com/comprobante.jpg",
                "nullable": true
              },
              "accionesProveedor": {
                "type": "string",
                "example": "Acciones tomadas por el proveedor",
                "nullable": true
              },
              "estaActivo": {
                "type": "boolean",
                "example": true
              },
              "usuarioCreacion": {
                "type": "string",
                "example": "admin_user"
              },
              "usuarioActualizacion": {
                "type": "string",
                "example": "admin_user",
                "nullable": true
              }
            }
          }
        ]
      },
      "MetodoPago": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Tarjeta de Crédito"
              },
              "pedidos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        ]
      },
      "OrdenSerie": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "Serie1"
              },
              "descripcion": {
                "type": "string",
                "example": "Descripción de la serie de orden",
                "nullable": true
              }
            }
          }
        ]
      },
      "Pago": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "esTransferencia": {
                "type": "boolean",
                "example": true
              },
              "montoCobrado": {
                "type": "number",
                "format": "decimal",
                "example": 150
              },
              "numeroOperacion": {
                "type": "string",
                "example": "OP123456",
                "nullable": true
              },
              "urlEvidencia": {
                "type": "string",
                "example": "http://example.com/evidencia.jpg",
                "nullable": true
              },
              "codigoTransaccion": {
                "type": "string",
                "example": "TX1234567890",
                "nullable": true
              },
              "venta": {
                "$ref": "#/components/schemas/Venta"
              },
              "metodoPago": {
                "$ref": "#/components/schemas/MetodoPago"
              },
              "banco": {
                "$ref": "#/components/schemas/Banco"
              }
            }
          }
        ]
      },
      "Pedido": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "estado": {
                "type": "string",
                "example": "En proceso"
              },
              "prioridadEntrega": {
                "type": "string",
                "example": "Alta",
                "nullable": true
              },
              "total": {
                "type": "number",
                "format": "decimal",
                "example": 250
              },
              "puntosOtorgados": {
                "type": "integer",
                "example": 10
              },
              "motivoCancelacion": {
                "type": "string",
                "example": "Cliente canceló el pedido",
                "nullable": true
              },
              "codigoSeguimiento": {
                "type": "string",
                "example": "TRACK123456",
                "nullable": true
              },
              "montoEfectivoPagar": {
                "type": "number",
                "format": "decimal",
                "example": 50,
                "nullable": true
              },
              "motorizado": {
                "$ref": "#/components/schemas/Motorizado"
              },
              "direccion": {
                "$ref": "#/components/schemas/Direccion"
              },
              "metodosPago": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetodoPago"
                }
              }
            }
          }
        ]
      },
      "Venta": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "tipoComprobante": {
                "type": "string",
                "example": "Factura"
              },
              "fechaVenta": {
                "type": "string",
                "format": "date-time",
                "example": "2023-10-01T12:00:00Z"
              },
              "numeroComprobante": {
                "type": "string",
                "example": "FAC123456"
              },
              "montoTotal": {
                "type": "number",
                "format": "decimal",
                "example": 500
              },
              "totalPaletas": {
                "type": "integer",
                "example": 10
              },
              "totalMafelitas": {
                "type": "integer",
                "example": 5
              },
              "estado": {
                "type": "string",
                "example": "Completado"
              },
              "totalIgv": {
                "type": "number",
                "format": "decimal",
                "example": 90
              },
              "pedido": {
                "$ref": "#/components/schemas/Pedido"
              },
              "ordenSerie": {
                "$ref": "#/components/schemas/OrdenSerie"
              }
            }
          }
        ]
      },
      "Persona": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "tipoDocumento": {
                "type": "string",
                "example": "DNI"
              },
              "numeroDocumento": {
                "type": "string",
                "example": "12345678"
              },
              "razonEliminacion": {
                "type": "string",
                "nullable": true,
                "example": "Duplicated entry"
              },
              "estado": {
                "type": "string",
                "example": "Active"
              }
            }
          }
        ]
      },
      "Usuario": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "nombre": {
                "type": "string",
                "example": "John"
              },
              "apellido": {
                "type": "string",
                "example": "Doe"
              },
              "conCuenta": {
                "type": "boolean",
                "example": true
              },
              "numeroTelefono": {
                "type": "string",
                "nullable": true,
                "example": "123456789"
              },
              "correo": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "contrasena": {
                "type": "string",
                "example": "password123"
              },
              "fechaUltimoLogin": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2023-10-01T12:00:00Z"
              },
              "persona": {
                "$ref": "#/components/schemas/Persona"
              }
            }
          }
        ]
      },
      "HistorialRepartidor": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntidadBase"
          },
          {
            "type": "object",
            "properties": {
              "estado": {
                "type": "string",
                "example": "Entregado"
              },
              "razonDeRechazo": {
                "type": "string",
                "nullable": true,
                "example": "Cliente no disponible"
              },
              "motorizado": {
                "$ref": "#/components/schemas/Motorizado"
              },
              "usuario": {
                "$ref": "#/components/schemas/Usuario"
              },
              "pedido": {
                "$ref": "#/components/schemas/Pedido"
              }
            }
          }
        ]
      },
      "ProductoRequestBody": {
        "type": "object",
        "required": [
          "id_ciudad"
        ],
        "properties": {
          "id_ciudad": {
            "type": "string",
            "description": "ID de la ciudad para recuperar productos"
          }
        }
      }
    }
  },
  "paths": {
    "/ajuste/{llave}": {
      "get": {
        "summary": "Recupera un ajuste por el nombre de la llave",
        "tags": [
          "Ajustes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "llave",
            "schema": {
              "type": "string",
              "enum": [
                "monto_minimo_pedido",
                "permitir_cancelaciones",
                "horario_lunes",
                "horario_martes",
                "horario_miercoles",
                "horario_jueves",
                "horario_viernes",
                "horario_sabado",
                "horario_domingo",
                "tiempo_confirmacion"
              ]
            },
            "required": true,
            "description": "Llave del ajuste"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del ajuste",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ajuste"
                }
              }
            }
          },
          "404": {
            "description": "Ajuste no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un ajuste por llave",
        "tags": [
          "Ajustes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "llave",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Llave del ajuste"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ajuste"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ajuste actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ajuste"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Ajuste no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un ajuste por llave",
        "tags": [
          "Ajustes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "llave",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Llave del ajuste"
          }
        ],
        "responses": {
          "200": {
            "description": "Ajuste eliminado exitosamente"
          },
          "404": {
            "description": "Ajuste no encontrado"
          }
        }
      }
    },
    "/ajuste": {
      "get": {
        "summary": "Lista todos los ajustes con paginación",
        "tags": [
          "Ajustes"
        ],
        "responses": {
          "200": {
            "description": "Una lista de ajustes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ajustes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ajuste"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo ajustes",
        "tags": [
          "Ajustes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ajuste"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El ajustes ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ajuste"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/almacenes": {
      "get": {
        "summary": "Lista todos los almacenes con paginación",
        "tags": [
          "Almacenes"
        ],
        "responses": {
          "200": {
            "description": "Una lista de almacenes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "almacenes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Almacen"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo almacén",
        "tags": [
          "Almacenes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Almacen"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El almacén ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Almacen"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/banco/{id}": {
      "get": {
        "summary": "Recupera un banco por ID",
        "tags": [
          "Bancos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del banco"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del banco",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              }
            }
          },
          "404": {
            "description": "Banco no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un banco por ID",
        "tags": [
          "Bancos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del banco"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Banco actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Banco no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un banco por ID",
        "tags": [
          "Bancos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del banco"
          }
        ],
        "responses": {
          "200": {
            "description": "Banco eliminado exitosamente"
          },
          "404": {
            "description": "Banco no encontrado"
          }
        }
      }
    },
    "/banco": {
      "get": {
        "summary": "Lista todos los bancos con paginación",
        "tags": [
          "Bancos"
        ],
        "responses": {
          "200": {
            "description": "Una lista de bancos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bancos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Banco"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo banco",
        "tags": [
          "Bancos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Banco"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El banco ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banco"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/ciudad": {
      "get": {
        "summary": "Lista todas los ciudades con paginación",
        "tags": [
          "Ciudad"
        ],
        "responses": {
          "200": {
            "description": "Una lista de ciudades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ciudades": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ciudad"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva ciudad",
        "tags": [
          "Ciudad"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ciudad"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La ciudad ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ciudad"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/contenidoseducativos": {
      "get": {
        "summary": "Lista todos los contenidos educativos con paginación",
        "tags": [
          "ContenidosEducativos"
        ],
        "responses": {
          "200": {
            "description": "Una lista de contenidos educativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contenidoEducativos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContenidoEducativo"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo contenido educativo",
        "tags": [
          "ContenidosEducativos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContenidoEducativo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El contenido educativo ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContenidoEducativo"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/detallePedido/{id}": {
      "get": {
        "summary": "Recupera un detallePedido por ID",
        "tags": [
          "DetallePedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del detallePedido"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del detallePedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetallePedido"
                }
              }
            }
          },
          "404": {
            "description": "DetallePedido no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un detallePedido por ID",
        "tags": [
          "DetallePedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del detallePedido"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/detallePedido"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "detallePedido actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/detallePedido"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "detallePedido no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un detallePedido por ID",
        "tags": [
          "DetallePedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del detallePedido"
          }
        ],
        "responses": {
          "200": {
            "description": "detallePedido eliminado exitosamente"
          },
          "404": {
            "description": "detallePedido no encontrado"
          }
        }
      }
    },
    "/detallePedido": {
      "get": {
        "summary": "Lista todos los detalles de pedidos con paginación",
        "tags": [
          "DetallePedidos"
        ],
        "responses": {
          "200": {
            "description": "Una lista de detalles de pedidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detallePedidos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DetallePedido"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo detalle de pedido",
        "tags": [
          "DetallesPedido"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetallePedido"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El detalle de pedido ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetallePedido"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/direccion": {
      "get": {
        "summary": "Lista todas los direcciones con paginación",
        "tags": [
          "Direccion"
        ],
        "responses": {
          "200": {
            "description": "Una lista de direcciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "direcciones": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Direccion"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva dirección",
        "tags": [
          "Direccion"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Direccion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La ubicación ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Direccion"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "description": {
      "0": "A",
      "1": "P",
      "2": "I",
      "3": " ",
      "4": "p",
      "5": "a",
      "6": "r",
      "7": "a",
      "8": " ",
      "9": "f",
      "10": "r",
      "11": "u",
      "12": "t",
      "13": "a",
      "14": "s"
    },
    "/frutas": {
      "get": {
        "summary": "Lista todas las frutas con paginación",
        "tags": [
          "Frutas"
        ],
        "responses": {
          "200": {
            "description": "Una lista de frutas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "frutas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Fruta"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva fruta",
        "tags": [
          "Frutas"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fruta"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La fruta ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fruta"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/historialRepartidor/{id}": {
      "get": {
        "summary": "Recupera un Historial de Repartidor por ID",
        "tags": [
          "HistorialRepartidores"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del Historial de Repartidor"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del Historial de Repartidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorialRepartidor"
                }
              }
            }
          },
          "404": {
            "description": "Historial de Repartidor no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un Historial de Repartidor por ID",
        "tags": [
          "HistorialRepartidores"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del Historial de Repartidor"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistorialRepartidor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Historial de Repartidor actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorialRepartidor"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Historial de Repartidor no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un Historial de Repartidor por ID",
        "tags": [
          "HistorialRepartidores"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del Historial de Repartidor"
          }
        ],
        "responses": {
          "200": {
            "description": "Historial de Repartidor eliminado exitosamente"
          },
          "404": {
            "description": "Historial de Repartidor no encontrado"
          }
        }
      }
    },
    "/historialRepartidor": {
      "get": {
        "summary": "Lista todos los Historiales de Repartidores con paginación",
        "tags": [
          "HistorialRepartidores"
        ],
        "responses": {
          "200": {
            "description": "Una lista de Historiales de Repartidores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "historiales": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HistorialRepartidor"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo Historial de Repartidor",
        "tags": [
          "HistorialRepartidor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistorialRepartidor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El Historial de Repartidor ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorialRepartidor"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/igv/{id}": {
      "get": {
        "summary": "Recupera un IGV por ID",
        "tags": [
          "Igvs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del IGV"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del IGV",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Igv"
                }
              }
            }
          },
          "404": {
            "description": "IGV no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un IGV por ID",
        "tags": [
          "Igvs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del IGV"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Igv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "IGV actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Igv"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "IGV no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un IGV por ID",
        "tags": [
          "Igvs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del IGV"
          }
        ],
        "responses": {
          "200": {
            "description": "IGV eliminado exitosamente"
          },
          "404": {
            "description": "IGV no encontrado"
          }
        }
      }
    },
    "/igv": {
      "get": {
        "summary": "Lista todos los IGVs con paginación",
        "tags": [
          "Igvs"
        ],
        "responses": {
          "200": {
            "description": "Una lista de IGVs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "igvs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Igv"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo IGV",
        "tags": [
          "IGV"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Igv"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El IGV ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Igv"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/imagenes": {
      "post": {
        "summary": "Genera una URL pre-firmada para subir un archivo a Google Drive",
        "tags": [
          "Imagenes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string",
                    "description": "Ruta del archivo a subir"
                  },
                  "fileName": {
                    "type": "string",
                    "description": "Nombre del archivo a subir"
                  },
                  "folderId": {
                    "type": "string",
                    "description": "ID de la carpeta en Google Drive"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "La URL pre-firmada ha sido generada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string"
                    },
                    "uploadUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/inventarioAlmacen/{id}": {
      "get": {
        "summary": "Recupera un inventario de almacén por ID",
        "tags": [
          "InventariosAlmacen"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario de almacén"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del inventario de almacén",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioAlmacen"
                }
              }
            }
          },
          "404": {
            "description": "Inventario de almacén no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un inventario de almacén por ID",
        "tags": [
          "InventariosAlmacen"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario de almacén"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioAlmacen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventario de almacén actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioAlmacen"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario de almacén no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un inventario de almacén por ID",
        "tags": [
          "InventariosAlmacen"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario de almacén"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventario de almacén eliminado exitosamente"
          },
          "404": {
            "description": "Inventario de almacén no encontrado"
          }
        }
      }
    },
    "/inventarioAlmacen/{id}/aumentar": {
      "patch": {
        "summary": "Aumenta el stock de un inventario de almacén por ID",
        "tags": [
          "InventariosAlmacen"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario de almacén"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cantidad": {
                    "type": "number",
                    "description": "Cantidad a aumentar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock aumentado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioAlmacen"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario de almacén no encontrado"
          }
        }
      }
    },
    "/inventarioAlmacen/{id}/disminuir": {
      "patch": {
        "summary": "Disminuye el stock de un inventario de almacén por ID",
        "tags": [
          "InventariosAlmacen"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario de almacén"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cantidad": {
                    "type": "number",
                    "description": "Cantidad a disminuir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock disminuido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioAlmacen"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario de almacén no encontrado"
          }
        }
      }
    },
    "/inventarioAlmacen": {
      "get": {
        "summary": "Lista todos los inventarios de almacén con paginación",
        "tags": [
          "InventariosAlmacen"
        ],
        "responses": {
          "200": {
            "description": "Una lista de inventarios de almacén",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inventarioAlmacens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventarioAlmacen"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo inventario de almacén",
        "tags": [
          "InventariosAlmacen"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioAlmacen"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El inventario de almacén ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioAlmacen"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/inventarioMotorizado/{id}": {
      "get": {
        "summary": "Recupera un inventario motorizado por ID",
        "tags": [
          "InventarioMotorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario motorizado"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del inventario motorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              }
            }
          },
          "404": {
            "description": "Inventario motorizado no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un inventario motorizado por ID",
        "tags": [
          "InventarioMotorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario motorizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioMotorizado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventario motorizado actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario motorizado no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un inventario motorizado por ID",
        "tags": [
          "InventarioMotorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario motorizado"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventario motorizado eliminado exitosamente"
          },
          "404": {
            "description": "Inventario motorizado no encontrado"
          }
        }
      }
    },
    "/inventarioMotorizado/{id}/aumentar": {
      "patch": {
        "summary": "Aumenta el stock de un inventario motorizado por ID",
        "tags": [
          "InventarioMotorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario motorizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cantidad": {
                    "type": "number",
                    "description": "Cantidad a aumentar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock aumentado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario motorizado no encontrado"
          }
        }
      }
    },
    "/inventarioMotorizado/{id}/disminuir": {
      "patch": {
        "summary": "Disminuye el stock de un inventario motorizado por ID",
        "tags": [
          "InventarioMotorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del inventario motorizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cantidad": {
                    "type": "number",
                    "description": "Cantidad a disminuir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock disminuido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Inventario motorizado no encontrado"
          }
        }
      }
    },
    "/inventarioMotorizado/ciudad": {
      "post": {
        "summary": "Obtener inventario motorizado por ciudad",
        "description": "Obtiene el inventario motorizado asociado a una ciudad específica.",
        "tags": [
          "InventarioMotorizado"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id_ciudad"
                ],
                "properties": {
                  "id_ciudad": {
                    "type": "string",
                    "description": "ID de la ciudad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventario motorizado obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inventarios": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventarioMotorizado"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Inventario motorizado no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Inventario motorizado no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/inventarioMotorizado/motorizado": {
      "post": {
        "summary": "Obtener inventario de un motorizado",
        "description": "Obtiene el inventario asociado a un motorizado específico.",
        "tags": [
          "Motorizados"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id_motorizado"
                ],
                "properties": {
                  "id_motorizado": {
                    "type": "string",
                    "description": "ID del motorizado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventario del motorizado obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inventarios": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventarioMotorizado"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Petición inválida"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Motorizado no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Motorizado no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/inventarioMotorizado": {
      "get": {
        "summary": "Lista todos los inventarioMotorizadoes con paginación",
        "tags": [
          "InventarioMotorizados"
        ],
        "responses": {
          "200": {
            "description": "Una lista de inventarioMotorizadoes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inventarioMotorizadoes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventarioMotorizado"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo inventarioMotorizado",
        "tags": [
          "InventarioMotorizados"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventarioMotorizado"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El inventarioMotorizado ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventarioMotorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/libroReclamaciones/{id}": {
      "get": {
        "summary": "Recuperar libro de reclamaciones",
        "description": "Recupera un libro de reclamaciones específico por su ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del libro de reclamaciones"
          }
        ],
        "responses": {
          "200": {
            "description": "Libro de reclamaciones recuperado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "libroReclamaciones": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "descripcion": {
                          "type": "string"
                        },
                        "fecha": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "estado": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Libro de reclamaciones no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Libro de reclamaciones no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Actualizar libro de reclamaciones",
        "description": "Actualiza un libro de reclamaciones específico por su ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del libro de reclamaciones"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "descripcion": {
                    "type": "string"
                  },
                  "fecha": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "estado": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Libro de reclamaciones actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "libroReclamaciones": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "descripcion": {
                          "type": "string"
                        },
                        "fecha": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "estado": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Petición inválida"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Libro de reclamaciones no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "LibroReclamaciones no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar libro de reclamaciones",
        "description": "Elimina un libro de reclamaciones específico por su ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del libro de reclamaciones"
          }
        ],
        "responses": {
          "200": {
            "description": "Libro de reclamaciones eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "LibroReclamaciones eliminado exitosamente"
                    },
                    "libroReclamaciones": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "descripcion": {
                          "type": "string"
                        },
                        "fecha": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "estado": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Libro de reclamaciones no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "LibroReclamaciones no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/libroReclamaciones": {
      "get": {
        "summary": "Lista todos los libros de reclamaciones con paginación",
        "tags": [
          "LibroReclamaciones"
        ],
        "responses": {
          "200": {
            "description": "Una lista de libros de reclamaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "libroreclamaciones": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LibroReclamaciones"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo libro de reclamaciones",
        "tags": [
          "LibroReclamaciones"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LibroReclamaciones"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El libro de reclamaciones ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibroReclamaciones"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/metodoPago/{id}": {
      "get": {
        "summary": "Recupera un método de pago por ID",
        "tags": [
          "MetodoPagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del método de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del método de pago",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetodoPago"
                }
              }
            }
          },
          "404": {
            "description": "Método de pago no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un método de pago por ID",
        "tags": [
          "MetodoPagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del método de pago"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetodoPago"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Método de pago actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetodoPago"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Método de pago no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un método de pago por ID",
        "tags": [
          "MetodoPagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del método de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Método de pago eliminado exitosamente"
          },
          "404": {
            "description": "Método de pago no encontrado"
          }
        }
      }
    },
    "/metodoPago/nombre/{nombre}": {
      "get": {
        "summary": "Recupera un método de pago por nombre",
        "tags": [
          "MetodoPagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nombre",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nombre del método de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del método de pago",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetodoPago"
                }
              }
            }
          },
          "404": {
            "description": "Método de pago no encontrado"
          }
        }
      }
    },
    "/metodoPago": {
      "get": {
        "summary": "Lista todos los métodos de pago con paginación",
        "tags": [
          "MetodoPagos"
        ],
        "responses": {
          "200": {
            "description": "Una lista de métodos de pago",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metodopagos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetodoPago"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo método de pago",
        "tags": [
          "MetodoPago"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetodoPago"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El método de pago ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetodoPago"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/motorizado/{id}": {
      "get": {
        "summary": "Recupera un motorizado por ID",
        "tags": [
          "Motorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del motorizado"
          },
          {
            "in": "query",
            "name": "enriquecido",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar el producto enriquecido"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del motorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorizado"
                }
              }
            }
          },
          "404": {
            "description": "Motorizado no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un motorizado por ID",
        "tags": [
          "Motorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del motorizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Motorizado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Motorizado actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Motorizado no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un motorizado por ID",
        "tags": [
          "Motorizados"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del motorizado"
          }
        ],
        "responses": {
          "200": {
            "description": "Motorizado eliminado exitosamente"
          },
          "404": {
            "description": "Motorizado no encontrado"
          }
        }
      }
    },
    "/motorizado/conDetalle": {
      "get": {
        "summary": "Obtener lista de motorizados con detalle",
        "description": "Obtiene una lista de motorizados con sus detalles asociados.",
        "tags": [
          "Motorizados"
        ],
        "responses": {
          "200": {
            "description": "Lista de motorizados obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "motorizados": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Motorizado"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No autorizado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/motorizado/placa": {
      "post": {
        "summary": "Recupera un motorizado por ID",
        "tags": [
          "Motorizados"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "placa": {
                    "type": "string",
                    "description": "placa del motorizado",
                    "example": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detalles del motorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorizado"
                }
              }
            }
          },
          "404": {
            "description": "Motorizado no encontrado"
          }
        }
      }
    },
    "/motorizado": {
      "get": {
        "summary": "Lista todos los motorizadoes con paginación",
        "tags": [
          "Motorizados"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enriquecido",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar el producto enriquecido"
          }
        ],
        "responses": {
          "200": {
            "description": "Una lista de motorizados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "motorizados": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Motorizado"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo  motorizado",
        "tags": [
          "Motorizados"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Motorizado"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El motorizado ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorizado"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/motorizado/usuario": {
      "post": {
        "summary": "Recupera un motorizado por ID",
        "tags": [
          "Motorizados"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_usuario": {
                    "type": "string",
                    "description": "ID del motorizado",
                    "example": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detalles del motorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorizado"
                }
              }
            }
          },
          "404": {
            "description": "Motorizado no encontrado"
          }
        }
      }
    },
    "/ordenSerie/{id}": {
      "get": {
        "summary": "Recupera una serie de órdenes por ID",
        "tags": [
          "OrdenSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la serie de órdenes"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles de la serie de órdenes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenSerie"
                }
              }
            }
          },
          "404": {
            "description": "Serie de órdenes no encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualiza una serie de órdenes por ID",
        "tags": [
          "OrdenSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la serie de órdenes"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenSerie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Serie de órdenes actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenSerie"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Serie de órdenes no encontrada"
          }
        }
      },
      "delete": {
        "summary": "Elimina una serie de órdenes por ID",
        "tags": [
          "OrdenSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la serie de órdenes"
          }
        ],
        "responses": {
          "200": {
            "description": "Serie de órdenes eliminada exitosamente"
          },
          "404": {
            "description": "Serie de órdenes no encontrada"
          }
        }
      }
    },
    "/ordenSerie": {
      "get": {
        "summary": "Lista todas las series de órdenes con paginación",
        "tags": [
          "OrdenSeries"
        ],
        "responses": {
          "200": {
            "description": "Una lista de series de órdenes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ordenseries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrdenSerie"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva serie de órdenes",
        "tags": [
          "OrdenSerie"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenSerie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La serie de órdenes ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenSerie"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/pago/{id}": {
      "get": {
        "summary": "Recupera un pago por ID",
        "tags": [
          "Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del pago",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pago"
                }
              }
            }
          },
          "404": {
            "description": "Pago no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un pago por ID",
        "tags": [
          "Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pago"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pago"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pago"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Pago no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un pago por ID",
        "tags": [
          "Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Pago eliminado exitosamente"
          },
          "404": {
            "description": "Pago no encontrado"
          }
        }
      }
    },
    "/pago": {
      "get": {
        "summary": "Lista todos los pagos con paginación",
        "tags": [
          "Pagos"
        ],
        "responses": {
          "200": {
            "description": "Una lista de pagos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pago"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo pago",
        "tags": [
          "Pago"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pago"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El pago ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pago"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/pedido/{id}/conDetalle": {
      "get": {
        "summary": "Recupera un pedido por ID con detalles de productos",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pedido"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "404": {
            "description": "Pedido no encontrado"
          }
        }
      }
    },
    "/pedido/{id}": {
      "get": {
        "summary": "Recupera un pedido por ID",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pedido"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "404": {
            "description": "Pedido no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un pedido por ID",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pedido"
          },
          {
            "in": "query",
            "name": "asignarRepartidor",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe asignar un repartidor"
          },
          {
            "in": "query",
            "name": "confirmar",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe confirmar el pedido. No hace falta enviar el body"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedido"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Petición inválida"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Pedido no encontrado"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "No hay motorizados disponibles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No hay motorizados"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Elimina un pedido por ID",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pedido"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido eliminado exitosamente"
          },
          "404": {
            "description": "Pedido no encontrado"
          }
        }
      }
    },
    "/pedido": {
      "get": {
        "summary": "Lista todos los pedidos con paginación",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enriquecido",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar el producto enriquecido"
          }
        ],
        "responses": {
          "200": {
            "description": "Una lista de pedidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pedidos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pedido"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo pedido",
        "tags": [
          "Pedido"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pedido"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El pedido ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/persona/{id}": {
      "get": {
        "summary": "Recupera una persona por ID",
        "tags": [
          "Personas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la persona"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles de la persona",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualiza una persona por ID",
        "tags": [
          "Personas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la persona"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Persona"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Persona actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      },
      "delete": {
        "summary": "Elimina una persona por ID",
        "tags": [
          "Personas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la persona"
          }
        ],
        "responses": {
          "200": {
            "description": "Persona eliminada exitosamente"
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      }
    },
    "/persona": {
      "get": {
        "summary": "Lista todas las personas con paginación",
        "tags": [
          "Personas"
        ],
        "responses": {
          "200": {
            "description": "Una lista de personas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "personas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Persona"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva persona",
        "tags": [
          "Persona"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Persona"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La persona ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/producto/{id}": {
      "get": {
        "summary": "Recupera un producto por ID",
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del producto"
          },
          {
            "in": "query",
            "name": "enriquecido",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar el producto enriquecido"
          },
          {
            "in": "query",
            "name": "nombre",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si realmente el id es el nombre del producto"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del producto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Actualiza un producto por ID",
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del producto"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/producto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/producto"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Producto no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un producto por ID",
        "tags": [
          "Productos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del producto"
          }
        ],
        "responses": {
          "200": {
            "description": "producto eliminado exitosamente"
          },
          "404": {
            "description": "producto no encontrado"
          }
        }
      }
    },
    "/producto/ciudad": {
      "post": {
        "summary": "Recuperar productos por ciudad",
        "description": "Recupera una lista de productos basados en el ID de la ciudad proporcionado.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista de productos recuperados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "nombre": {
                        "type": "string"
                      },
                      "precio": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Petición inválida"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Motorizado no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Motorizado no encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/producto": {
      "get": {
        "summary": "Lista todos los productos con paginación",
        "tags": [
          "Producto"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enriquecido",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar el producto enriquecido"
          },
          {
            "in": "query",
            "name": "ecommerce",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Si se debe recuperar solo los productos que se muestran en el ecommerce"
          }
        ],
        "responses": {
          "200": {
            "description": "Una lista de productos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "productos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Producto"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo producto",
        "tags": [
          "Producto"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El producto ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "405": {
            "description": "Ya existe un producto con ese nombre"
          }
        }
      }
    },
    "/subcategoria/{id}": {
      "get": {
        "summary": "Recupera un subcategoria por ID",
        "tags": [
          "Subcategorias"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del subcategoria"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del subcategoria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategoria"
                }
              }
            }
          },
          "404": {
            "description": "Subcategoria no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un subcategoria por ID",
        "tags": [
          "Subcategorias"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del subcategoria"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subcategoria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "subcategoria actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subcategoria"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "subcategoria no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un subcategoria por ID",
        "tags": [
          "Subcategorias"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del subcategoria"
          }
        ],
        "responses": {
          "200": {
            "description": "subcategoria eliminado exitosamente"
          },
          "404": {
            "description": "subcategoria no encontrado"
          },
          "406": {
            "description": "Hay productos asociados a esta subcategoría"
          }
        }
      }
    },
    "/subcategoria": {
      "get": {
        "summary": "Lista de subcategorias con paginación (20 elementos por página)",
        "tags": [
          "Subcategoria"
        ],
        "responses": {
          "200": {
            "description": "A list of subcategorias",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subcategorias": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subcategoria"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una subcategoria",
        "tags": [
          "Subcategoria"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcategoria"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La subcategoria ha sido creada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategoria"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida (el body no es correcto)"
          }
        }
      }
    },
    "/tipoProducto/{id}": {
      "get": {
        "summary": "Recupera un tipoProducto por ID",
        "tags": [
          "TipoProducto"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del tipoProducto"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del tipoProducto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoProducto"
                }
              }
            }
          },
          "404": {
            "description": "TipoProducto no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un tipoProducto por ID",
        "tags": [
          "TipoProducto"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del tipoProducto"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tipoProducto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "tipoProducto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tipoProducto"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "tipoProducto no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un tipoProducto por ID",
        "tags": [
          "TipoProducto"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del tipoProducto"
          }
        ],
        "responses": {
          "200": {
            "description": "tipoProducto eliminado exitosamente"
          },
          "404": {
            "description": "tipoProducto no encontrado"
          }
        }
      }
    },
    "/tipoProducto": {
      "get": {
        "summary": "Lista todos los tipoProductos con paginación",
        "tags": [
          "TipoProducto"
        ],
        "responses": {
          "200": {
            "description": "Una lista de tipoProductos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tipoProductos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TipoProducto"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo tipoProducto",
        "tags": [
          "TipoProducto"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoProducto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El tipoProducto ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoProducto"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/ubicacion": {
      "get": {
        "summary": "Lista todos los ubicaciones con paginación",
        "tags": [
          "Ubicacion"
        ],
        "responses": {
          "200": {
            "description": "Una lista de ubicaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ubicaciones": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ubicacion"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva ubicación",
        "tags": [
          "Ubicacion"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La ubicación ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ubicacion"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/usuario/{id_usuario}/repartidorPedidos": {
      "get": {
        "summary": "Lista todos los pedidos asignados a un repartidor",
        "tags": [
          "Usuarios"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id_usuario",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del repartidor"
          }
        ],
        "responses": {
          "200": {
            "description": "Una lista de pedidos del repartidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pedidos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pedido"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedidos no encontrados"
          }
        }
      }
    },
    "/usuario/{id}": {
      "get": {
        "summary": "Recupera un usuario por ID",
        "tags": [
          "Usuarios"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualiza un usuario por ID",
        "tags": [
          "Usuarios"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del usuario"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Elimina un usuario por ID",
        "tags": [
          "Usuarios"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/usuario": {
      "get": {
        "summary": "Lista todos los usuarios con paginación",
        "tags": [
          "Usuarios"
        ],
        "responses": {
          "200": {
            "description": "Una lista de usuarios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usuarios": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Usuario"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un nuevo usuario",
        "tags": [
          "Usuario"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El usuario ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    },
    "/venta/{id}": {
      "get": {
        "summary": "Recupera una venta por ID",
        "tags": [
          "Ventas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la venta"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles de la venta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venta"
                }
              }
            }
          },
          "404": {
            "description": "Venta no encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualiza una venta por ID",
        "tags": [
          "Ventas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la venta"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Venta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venta"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          },
          "404": {
            "description": "Venta no encontrada"
          }
        }
      },
      "delete": {
        "summary": "Elimina una venta por ID",
        "tags": [
          "Ventas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la venta"
          }
        ],
        "responses": {
          "200": {
            "description": "Venta eliminada exitosamente"
          },
          "404": {
            "description": "Venta no encontrada"
          }
        }
      }
    },
    "/venta": {
      "get": {
        "summary": "Lista todas las ventas con paginación",
        "tags": [
          "Ventas"
        ],
        "responses": {
          "200": {
            "description": "Una lista de ventas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ventas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Venta"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea una nueva venta",
        "tags": [
          "Venta"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Venta"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La venta ha sido creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venta"
                }
              }
            }
          },
          "400": {
            "description": "Petición inválida"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Ajustes",
      "description": "API para la gestión de ajustes"
    },
    {
      "name": "Almacenes",
      "description": "API para la gestión de almacenes"
    },
    {
      "name": "Bancos",
      "description": "API para la gestión de bancos"
    },
    {
      "name": "Ciudad",
      "description": "API para la gestión de ciudades"
    },
    {
      "name": "ContenidosEducativos",
      "description": "API para la gestión de contenidos educativos"
    },
    {
      "name": "DetallePedidos",
      "description": "API para la gestión de detalle de pedidos"
    },
    {
      "name": "Direcciones",
      "description": "API para la gestión de direcciones"
    },
    {
      "name": "Frutas"
    },
    {
      "name": "HistorialRepartidores",
      "description": "API para la gestión de Historiales de Repartidores"
    },
    {
      "name": "Igvs",
      "description": "API para la gestión de IGVs"
    },
    {
      "name": "Imagenes",
      "description": "API para la gestión de imágenes"
    },
    {
      "name": "InventariosAlmacen",
      "description": "API para la gestión de inventarios de almacén"
    },
    {
      "name": "InventarioMotorizado",
      "description": "API para la gestión de inventarioMotorizadoes"
    },
    {
      "name": "LibroReclamaciones",
      "description": "API para la gestión de libros de reclamaciones"
    },
    {
      "name": "MetodoPagos",
      "description": "API para la gestión de métodos de pago"
    },
    {
      "name": "Motorizados",
      "description": "API para la gestión de motorizados"
    },
    {
      "name": "Motorizadoes",
      "description": "API para la gestión de motorizadoes"
    },
    {
      "name": "OrdenSeries",
      "description": "API para la gestión de series de órdenes"
    },
    {
      "name": "Pagos",
      "description": "API para la gestión de pagos"
    },
    {
      "name": "Pedidos",
      "description": "API para la gestión de pedidos"
    },
    {
      "name": "Personas",
      "description": "API para la gestión de personas"
    },
    {
      "name": "Producto",
      "description": "API para la gestión de productos"
    },
    {
      "name": "Subcategoria",
      "description": "API para subcategorías"
    },
    {
      "name": "TipoProductos",
      "description": "API para tipo de productos"
    },
    {
      "name": "Ubicacion",
      "description": "API para la gestión de ubicaciones"
    },
    {
      "name": "Usuarios",
      "description": "API para la gestión de usuarios"
    },
    {
      "name": "Ventas",
      "description": "API para la gestión de ventas"
    }
  ]
}